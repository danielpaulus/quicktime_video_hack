package packet_test

import (
	"io/ioutil"
	"log"
	"testing"

	"github.com/danielpaulus/quicktime_video_hack/screencapture/packet"
	"github.com/stretchr/testify/assert"
)

var expectedBytes = []byte{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}

func TestTjmp(t *testing.T) {
	dat, err := ioutil.ReadFile("fixtures/asyn-tjmp")
	if err != nil {
		log.Fatal(err)
	}
	tjmpPacket, err := packet.NewAsynTjmpPacketFromBytes(dat)
	if assert.NoError(t, err) {
		assert.Equal(t, uint64(0x11123bc18), tjmpPacket.ClockRef)
		assert.Equal(t, expectedBytes, tjmpPacket.Unknown)
		assert.Equal(t, "ASYN_TJMP{ClockRef:11123bc18, UnknownData:0000000000000000000000000000000001000000010000000000000000000000000000000000000001000000010000000000000000000000}", tjmpPacket.String())
	}
}
